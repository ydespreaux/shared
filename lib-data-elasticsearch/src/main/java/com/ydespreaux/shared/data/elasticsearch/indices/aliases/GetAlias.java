package com.ydespreaux.shared.data.elasticsearch.indices.aliases;import io.searchbox.action.AbstractMultiIndexActionBuilder;import io.searchbox.action.GenericResultAbstractAction;import io.searchbox.client.config.ElasticsearchVersion;import java.io.UnsupportedEncodingException;import java.net.URLEncoder;/** * Jest Action class, giving all index name enclosed in the specified alias property. */public class GetAlias extends GenericResultAbstractAction {    /**     * The given alias.     */    private String aliasName;    /**     * Construct an instance of {@link GetAlias}, withn the given GetAlias.Builder.     *     * @param builder the given {@link Builder}     */    protected GetAlias(GetAlias.Builder builder) {        super(builder);        this.aliasName = builder.aliasName;    }    @Override    public String getRestMethodName() {        return "GET";    }    @Override    protected String buildURI(ElasticsearchVersion version) {        StringBuilder sb = new StringBuilder();        try {            sb.append("_alias/").append(URLEncoder.encode(this.aliasName, CHARSET));        } catch (UnsupportedEncodingException e) {            log.error("Error occurred while adding alias name to uri", e);        }        return sb.toString();    }    /**     * Builder for this class.     */    public static class Builder extends AbstractMultiIndexActionBuilder<GetAlias, GetAlias.Builder> {        protected String aliasName;        /**         * Construct with given name.         *         * @param aliasName the given alias name.         */        public Builder(String aliasName) {            this.aliasName = aliasName;        }        /**         * Build the instance.         *         * @return a GetAlias instance builded.         */        public GetAlias build() {            return new GetAlias(this);        }    }}