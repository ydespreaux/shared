package com.ydespreaux.shared.data.elasticsearch.core;import org.elasticsearch.client.Request;import org.elasticsearch.client.Response;import org.elasticsearch.client.ResponseListener;import org.springframework.core.io.Resource;import java.io.IOException;import java.util.List;/** * Base class definfing operation for Elastic Search. */public interface ElasticsearchAdminOperations {    //***************************************    // Request operations    //***************************************    /**     *     * @param request     * @return     */    Response performRequest(Request request) throws IOException;    /**     *     * @param request     * @param listener     */    void performRequestAsync(Request request, ResponseListener listener);    //***************************************    // Administration operations    //***************************************    /**     * the template is existing.     *     * @param templateName the given template name.     * @return true if the given templateName exist, else false.     */    boolean templateExists(String templateName);    /**     * Create a new template in elastic search, with the gievn templateName, location, and createOnly parameters.     *     * @param templateName the given templateName     * @param location     the given location.     * @param createOnly   true if only ceate the template esle false.     */    void createTemplate(String templateName, String location, Boolean createOnly);    /**     * Create a new template in elastic search, with the givens templateName, locations,    nd createOnly parameters.     *     * @param templateName the given templateName     * @param locations    the given location.     * @param createOnly   true if only ceate the template esle false.     */    void createTemplate(String templateName, List<Resource> locations, Boolean createOnly);    /**     * Delete the template with the given templateName parameter.     *     * @param templateName the given templateName.     */    void deleteTemplate(String templateName);    /**     * Delete index     *     * @param indexName index name     */    boolean deleteIndexByName(String indexName);    /**     * Delete all indices for a aliasOrIndex     *     * @param aliasName he given aliasName.     */    void deleteIndexByAlias(String aliasName);    /**     * method checking the existance of the given indexName.     * @param indexName the given indexName.     * @return true if indexName exist in elastic search.     */    boolean indexExists(String indexName);    /**     *     * @param indexName     * @return     */    boolean createIndex(String indexName);    /**     *     * @param indexPath     * @return     */    boolean createIndexWithSettingsAndMapping(String indexName, String indexPath);}